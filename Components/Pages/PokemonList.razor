@page "/pokelist"
@inject PokeApiService PokeApiService

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudText Typo="Typo.h4" Class="text-center mb-4" Color="Color.Primary">Lista de Pokémon</MudText>

    <MudGrid>
        @if (pokemonList != null)
        {
        @foreach (var pokemon in pokemonList)
        {
        <MudItem xs="12" sm="6" md="4" lg="3">
            <MudCard Class="mt-4" Style="background-color: #FFFFFF; border: 2px solid #FF0000; border-radius: 16px;">
                <MudCardContent Style="align-items: center">
                    <img src="@GetPokemonImageUrl(pokemon.Url)" alt="@pokemon.Name" style="width:100px; height:100px;" />
                    <MudText Align="Align.Center" Typo="Typo.h5" Color="Color.Primary">@pokemon.Name</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        }
        }
        else
        {
        <MudText Typo="Typo.h6" Align="Align.Center">Cargando la lista de Pokémon...</MudText>
        }
    </MudGrid>
</MudContainer>

@code {
private List<ListaInfo>? pokemonList;

protected override async Task OnInitializedAsync()
{
try
{
pokemonList = await PokeApiService.GetPokeListAsync();
}
catch (Exception ex)
{
Console.WriteLine($"Error al cargar la lista de Pokémon: {ex.Message}");
}
}

private string GetPokemonImageUrl(string url)
{
var id = url.TrimEnd('/').Split('/').Last();
return $"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/{id}.png";
}
}
